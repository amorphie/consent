version: "3.9"
services:

  redis:
    container_name: bbt-consent-redis
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis:/data
    networks:
      - bbt-development

  redisinsight:
    container_name: bbt-consent-red-insight
    image: redislabs/redisinsight:latest
    ports:
      - '5501:8001'
    volumes:
      - redisinsight:/db
    restart: unless-stopped
    networks:
      - bbt-development
      
  zeebe:
    container_name: bbt-consent-zeebe
    image: camunda/zeebe:latest
    environment:
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_CLASSNAME=io.camunda.zeebe.exporter.ElasticsearchExporter
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_URL=http://bbt-consent-elastic:9200
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_BULK_SIZE=1
      - ZEEBE_LOG_LEVEL=debug
      - ZEEBE_REDIS_REMOTE_ADDRESS=redis://bbt-consent-redis:6379
      - ZEEBE_REDIS_TIME_TO_LIVE_IN_SECONDS=900
    depends_on:
      - elastic
      - redis
    ports:
      - "26500:26500"
      - "9600:9600"
    volumes:
      - ./application.yaml:/usr/local/zeebe/config/application.yaml
      - ./zeebe-exporters/zeebe-redis-exporter-0.9.2-jar-with-dependencie.jar:/usr/local/zeebe/exporters/zeebe-redis-exporter-jar-with-dependencies.jar
    networks:
      - bbt-development

  operate: 
    container_name: bbt-consent-zeebe-operate
    image: camunda/operate:latest
    ports:
      - "8081:8080"
    environment: 
      - CAMUNDA_OPERATE_ZEEBE_GATEWAYADDRESS=bbt-consent-zeebe:26500
      - CAMUNDA_OPERATE_ELASTICSEARCH_URL=http://bbt-consent-elastic:9200
      - CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_URL=http://bbt-consent-elastic:9200
    networks:
      - bbt-development
    depends_on:
      - zeebe
      - elastic

  postgres:
    container_name: bbt-consent-postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - bbt-development

  pgadmin:
    container_name: bbt-consent-pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: "info@info.com"
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5502:80"
    restart: unless-stopped
    networks:
      - bbt-development

  elastic:
    container_name: bbt-consent-elastic
    image: elasticsearch:8.8.1
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    networks:
      - bbt-development
    ports:
      - 9200:9200

  kibana:
    container_name: bbt-consent-kibana
    image: kibana:8.8.1
    environment:
      - ELASTICSEARCH_HOSTS=http://bbt-consent-elastic:9200
    networks:
      - bbt-development
    depends_on:
      - elastic
    ports:
      - 5601:5601

  vault:
    container_name: bbt-consent-vault
    image: vault:1.13.3
    restart: on-failure:10
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: 'https://0.0.0.0:8200'
      VAULT_API_ADDR: 'https://0.0.0.0:8200'
      VAULT_DEV_ROOT_TOKEN_ID: 'admin'
      VAULT_TOKEN: 'admin'
    volumes:
      - ./file:/vault/file
    cap_add:
      - IPC_LOCK
    healthcheck:
      retries: 5
    command: server -dev -dev-root-token-id="admin"
    networks:
      - bbt-development

  vault-prepopulate:
    image: alpine/curl:latest
    depends_on:
      - vault
    volumes:
      - ./vault.sh:/usr/local/bin/prepopulate_vault.sh
    command: ["sh", "-c", "/usr/local/bin/prepopulate_vault.sh && /usr/local/bin/prepopulate_vault.sh"]
    networks:
       - bbt-development

  zipkin:
    container_name: bbt-consent-zipkin
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"
    networks:
      - bbt-development

  prometheus:
    container_name: bbt-consent-prometheus
    image: prom/prometheus:latest
    command:
      - "--config.file=/etc/prometheus.yml"
    volumes:
      - ./prometheus:/etc
    ports:
      - "9090:9090"
    networks:
      - bbt-development

  grafana:
    container_name: bbt-consent-grafana
    image: grafana/grafana:latest
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
   
    ports:
      - "3000:3000"
    networks:
      - bbt-development
    depends_on:
      - prometheus

  placement:
      image: daprio/dapr:latest
      command: ["./placement", "-port", "50006", "log-level", "debug", "--log-as-json"]
      ports:
      - "50006:50006"
      networks:
      - bbt-development

  zookeeper1:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper1
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - bbt-development
  kafka1:
    image: confluentinc/cp-kafka
    container_name: kafka1
    depends_on:
      - zookeeper1
    ports:
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper1:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092,PLAINTEXT1://localhost:29092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_LOG_DIRS=/var/lib/kafka/data
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP= PLAINTEXT:PLAINTEXT, PLAINTEXT1:PLAINTEXT
    networks:
      - bbt-development
  kafka-ui1:
    container_name: kafka-ui1
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka1
    environment:
      - KAFKA_CLUSTERS_0_NAME= local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS= kafka1:9092
      - DYNAMIC_CONFIG_ENABLED= 'true'
    networks:
      - bbt-development
networks:
  bbt-development:
    external: true

volumes:
  redis:
  redisinsight:
  postgres:
  pgadmin:
  dapr:
  grafana-data:
  prometheus:

